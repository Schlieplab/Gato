* VertexLabel in weiss, wenn Knoten dunkel (alle Farben < 128 ???)

================================================================================
- breakPoints can only be at code lines (not blanks or comments-only lines)

- Added "b" for toggling breakpoints

- Interactive and break lines have now are grey background

- PrologOptions (s.b.) do actually work now

================================================================================
* Tastaturbefehle zum Steppen etc.
       self.master.bind_all('s', self.KeyStart)
        self.master.bind_all('x', self.KeyStop)
        self.master.bind_all('<space>', self.KeyStep)
        self.master.bind_all('c', self.KeyContinue)
        self.master.bind_all('t', self.KeyTrace)

- Okay? How to control Hide/Show of second window ? Do we need to ? WM kills
  do a withdraw so we can resuse
  
Alle Prologs sollten jetzt haben:

breakpoints = [1,7,9]
interactive = [1,2,3]
graphDisplays = 1
about = """<HEAD>
<TITLE>The silly algorithm</TITLE>
</HEAD>
<BODY>

dasdasdasda

</BODY>
"""

* BlinkingNeighborhood letzte "geblinkte" Kante bleibt grau? bis
  naechste Kante blinkt. Siehe BlinkingTrackLastNeighborhood

* DefaultInfo zurücksetzen bei Algorithmenstart

* PickVertex & PickEdge moeglich mit Default-Vertices/Edges statt
  random
  
  Achtung: Syntax hat sich geandert: PickEdge(default=None, filter=None, visual=None)

* Bei Start etc. alles im Canvas loeschen.

================================================================================
- Moving vertex fucks up euclidean edge weights
  Correcting upon save ?

- Directed/Euclidian etc. wird nicht gesetzt beim Laden

- Algorithms: Remove initial Cont and Double Steps

- Algorithms: PickVertex und PickEdge eingebaut

- Clear fuer Queue/Stack

- GUI: SetAllVerticesColor fuer SubGraphen

- Im Prolog kann man jetzt mit self.NeededProperties({'name':val})
  sicherstellen, dass der Graph ne bestimmte Eigenschaft hat.

  Jetzt muss ich nur noch das File-Format aendern

- SCOPE problems (fixed -- misconception about namespaces caused misbehaviour)

